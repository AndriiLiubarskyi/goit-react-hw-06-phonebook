{"version":3,"sources":["components/Phonebook/Filter.module.css","components/Phonebook/ContactItem.module.css","redux/contacts/contacts-action.js","redux/contacts/contacts-selectors.js","components/Phonebook/ContactAddForm.js","components/Phonebook/ContactItem.js","components/Phonebook/ContactList.js","components/Phonebook/Filter.js","App.js","redux/contacts/contacts-reduser.js","redux/store.js","index.js","components/Phonebook/ContactAddForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","ContactAddForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","target","value","className","styles","addForm","onSubmit","contactName","preventDefault","some","alert","contactsAction","form","label","input","type","pattern","title","required","onChange","buttonAdd","ContactListItem","onDeleteContact","contactItem","button","onClick","ContactList","map","Filter","App","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.30a892e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Filter_contacts__3MhCC\",\"label\":\"Filter_label__2YvvV\",\"input\":\"Filter_input__CisAm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__3uuRK\",\"button\":\"ContactItem_button__30EZL\"};","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\r\n    payload: {\r\n        id: shortid.generate(),\r\n        name,\r\n        number,\r\n    }, \r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\n// eslint-disable-next-line\r\nexport default { addContact, deleteContact, changeFilter };\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n    const contacts = getContacts(state);\r\n    const filter = getFilter(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n};","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport contactsAction from \"../../redux/contacts/contacts-action\";\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport styles from './ContactAddForm.module.css';\r\n\r\n\r\nexport default function ContactAddForm() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch()\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n      switch (name) {\r\n        case 'name':\r\n          setName(value);\r\n          break;\r\n\r\n        case 'number':\r\n          setNumber(value);\r\n          break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  const findName = contactName => {\r\n    return contacts.some(({ name }) => name === contactName);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (findName(name)) {\r\n      alert(`${name} is already in contacts!`);\r\n      return;\r\n    }\r\n    dispatch(contactsAction.addContact({name, number}))\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n     <div className={styles.addForm}>\r\n         <form onSubmit={handleSubmit} className={styles.form}>\r\n           <label className={styles.label}>\r\n             Name\r\n             <input className={styles.input}\r\n               type=\"text\"\r\n               name=\"name\"\r\n               pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n               title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n               required value={name}\r\n               onChange={handleChange}\r\n             />\r\n           </label>\r\n           <label className={styles.label}>\r\n             Number\r\n             <input className={styles.input}\r\n               type=\"tel\"\r\n               name=\"number\"\r\n               pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n               title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n               required\r\n               value={number}\r\n               onChange={handleChange}\r\n             />\r\n           </label>\r\n           <button className={styles.buttonAdd} type=\"submit\">\r\n             Add contact\r\n           </button>\r\n         </form>\r\n      </div>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, id, onDeleteContact }) => {\r\n  return (\r\n  <li className={styles.contactItem}>\r\n    <p>{name}: {number}</p>\r\n    <button className={styles.button}\r\n      type=\"button\"\r\n      onClick={() => onDeleteContact(id)}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n)};\r\n\r\nContactListItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ContactListItem from './ContactItem';\r\nimport contactsAction from '../../redux/contacts/contacts-action';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nconst ContactList = () => {\r\n    const contacts = useSelector(getVisibleContacts);\r\n    const dispatch = useDispatch();\r\n    const onDeleteContact = id => dispatch(contactsAction.deleteContact(id))\r\n\r\n  return (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        onDeleteContact={()=> onDeleteContact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n)};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport contactsAction from '../../redux/contacts/contacts-action';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(contactsAction.changeFilter(e.target.value))\r\n  return (\r\n    <div className={styles.contacts}>\r\n      <label className={styles.label}>\r\n          Find contacts by name\r\n        <input className={styles.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;","import ContactAddForm from './components/Phonebook/ContactAddForm';\r\nimport ContactList from './components/Phonebook/ContactList';\r\nimport Filter from './components/Phonebook/Filter';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactAddForm  />\r\n      <h2>Contacts</h2>\r\n      <Filter />  \r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-action'\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state, { payload }) => [...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport { persistStore, persistReducer, PAUSE, FLUSH, REHYDRATE, PERSIST, PURGE, REGISTER,} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducers from './contacts/contacts-reduser';\r\n\r\nconst middleware = (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n}).concat(logger);\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducers),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default {store, persistor};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport store from './redux/store'\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonAdd\":\"ContactAddForm_buttonAdd__3rpem\",\"addForm\":\"ContactAddForm_addForm__2iMZE\",\"form\":\"ContactAddForm_form__DnD0A\",\"label\":\"ContactAddForm_label__1ITFn\",\"input\":\"ContactAddForm_input__gQEmW\"};"],"sourceRoot":""}